// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/gin-gonic/gin"
	"github.com/google/wire"
	"github.com/kackerx/interview/common/middleware"
	"github.com/kackerx/interview/internal/appservice"
	"github.com/kackerx/interview/internal/conf"
	"github.com/kackerx/interview/internal/data"
	"github.com/kackerx/interview/internal/domain/service"
	"github.com/kackerx/interview/internal/handler"
	"github.com/kackerx/interview/internal/server"
)

// Injectors from wire.go:

func NewWire(cfg *conf.Conf) (*gin.Engine, func(), error) {
	jwt := middleware.NewJwt(cfg)
	handlerHandler := handler.NewHandler()
	appService := appservice.NewAppService()
	serviceService := service.NewService(jwt)
	db := data.NewDb(cfg)
	dataData := data.NewData(db)
	userRepo := data.NewUserRepo(dataData)
	userDomainService := service.NewUserDomainService(serviceService, userRepo)
	userAppService := appservice.NewUserAppService(appService, userDomainService)
	userHandler := handler.NewUserHandler(handlerHandler, userAppService)
	engine := server.NewHTTPServer(cfg, jwt, userHandler)
	return engine, func() {
	}, nil
}

// wire.go:

var repositorySet = wire.NewSet(data.NewDb, data.NewData, data.NewUserRepo)

var serviceSet = wire.NewSet(service.NewService, service.NewUserDomainService)

var appServiceSet = wire.NewSet(appservice.NewAppService, appservice.NewUserAppService)

var handlerSet = wire.NewSet(handler.NewHandler, handler.NewUserHandler)

var serverSet = wire.NewSet(server.NewHTTPServer)

var commonSet = wire.NewSet(middleware.NewJwt)
